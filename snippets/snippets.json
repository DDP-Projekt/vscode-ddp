{
	"Write string": {
		"scope": "ddp",
		"prefix": "Schreibe Text",
		"body": [
			"Schreibe den Text \"${1:Text hier}\"."
		],
		"description": "Schreibe Text"
	},
	"Write int": {
		"scope": "ddp",
		"prefix": "Schreibe Zahl",
		"body": [
			"Schreibe die Zahl ${1:$BLOCK_COMMENT_START Zahl $BLOCK_COMMENT_END}."
		],
		"description": "Schreibe Zahl"
	},
	"Write float": {
		"scope": "ddp",
		"prefix": "Schreibe Kommazahl",
		"body": [
			"Schreibe die Kommazahl ${1:$BLOCK_COMMENT_START Kommazahl $BLOCK_COMMENT_END}."
		],
		"description": "Schreibe Kommazahl"
	},
	"Write bool": {
		"scope": "ddp",
		"prefix": "Schreibe Boolean",
		"body": [
			"Schreibe den Boolean ${1:$BLOCK_COMMENT_START Boolean Ausdruck $BLOCK_COMMENT_END}."
		],
		"description": "Schreibe Boolean"
	},
	"Write char": {
		"scope": "ddp",
		"prefix": "Schreibe Buchstabe",
		"body": [
			"Schreibe den Buchstaben '${1:Zeichen}'."
		],
		"description": "Schreibe Buchstabe"
	},
	"For Loop": {
		"scope": "ddp",
		"prefix": "Für",
		"body": [
			"Für jede Zahl ${1:index} von ${2:Start} bis ${3:Ende}, mache:",
			"\t${4:Schreibe die Zahl ${1:index}}."
		],
		"description": "Für Schleife"
	},
	"While Loop": {
		"scope": "ddp",
		"prefix": "Solange",
		"body": [
			"Solange ${1:Bedingung} ist, mache:",
			"\t$BLOCK_COMMENT_START Schleifen Körper $BLOCK_COMMENT_END"
		],
		"description": "Solange Schleife"
	},
	"Do While Loop": {
		"scope": "ddp",
		"prefix": "Mache",
		"body": [
			"Mache:",
			"\t$BLOCK_COMMENT_START Schleifen Körper $BLOCK_COMMENT_END",
			"Solange ${1:Bedingung} ist."
		],
		"description": "Mache-solange Schleife"
	},
	"Repeat": {
		"scope": "ddp",
		"prefix": "Mache",
		"body": [
			"Mache:",
			"\t$BLOCK_COMMENT_START Wiederholungs Körper $BLOCK_COMMENT_END",
			"(${1:Anzahl}) mal."
		],
		"description": "Wiederholung"
	},
	"If": {
		"scope": "ddp",
		"prefix": "Wenn",
		"body": [
			"Wenn ${1:Bedingung} ist, dann:",
			"\t${2:$BLOCK_COMMENT_START Wenn Körper $BLOCK_COMMENT_END}"
		],
		"description": "Wenn Anweisung"
	},
	"ElseIf": {
		"scope": "ddp",
		"prefix": "Wenn aber",
		"body": [
			"Wenn ${1:Bedingung} ist, dann:",
			"\t${2:$BLOCK_COMMENT_START Wenn Körper $BLOCK_COMMENT_END}",
			"Wenn aber ${3:Bedingung} ist, dann:",
			"\t${4:$BLOCK_COMMENT_START Wenn aber Körper $BLOCK_COMMENT_END}"
		],
		"description": "Wenn Anweisung mit Wenn aber Anweisung"
	},
	"Else": {
		"scope": "ddp",
		"prefix": "Sonst",
		"body": [
			"Sonst:",
			"\t${1:$BLOCK_COMMENT_START Sonst Körper $BLOCK_COMMENT_END}"
		],
		"description": "Sonst Anweisung"
	},
	"Include": {
		"scope": "ddp",
		"prefix": "Binde",
		"body": [
			"Binde \"${1:Datei-Pfad}\" ein."
		],
		"description": "Einbindung"
	},
	"Include-std": {
		"scope": "ddp",
		"prefix": "Binde-Duden",
		"body": [
			"Binde \"Duden/${1:Datei-Pfad}\" ein."
		],
		"description": "Duden Einbindung"
	},
	"Funct-NoPram": {
		"scope": "ddp",
		"prefix": "Funktion",
		"body": [
			"Die Funktion ${1:Name} gibt ${2:nichts} zurück, macht:",
			"\t$BLOCK_COMMENT_START Funktions Körper $BLOCK_COMMENT_END",
			"Und kann so benutzt werden:",
			"\t\"${3:Alias}\""
		],
		"description": "Funktions Deklaration ohne Parameter"
	},
	"Function-OneParam": {
		"scope": "ddp",
		"prefix": "Funktion",
		"body": [
			"Die Funktion ${1:Name} mit dem Parameter ${2:x} vom Typ ${3:Zahl}, gibt ${4:nichts} zurück, macht:",
			"\t$BLOCK_COMMENT_START Funktions Körper $BLOCK_COMMENT_END",
			"Und kann so benutzt werden:",
			"\t\"${5:Alias <x>}\""
		],
		"description": "Funktions Deklaration mit einem Parameter"
	},
	"Function-MultipleParam": {
		"scope": "ddp",
		"prefix": "Funktion",
		"body": [
			"Die Funktion ${1:Name} mit den Parametern ${2:x} und ${3:y} vom Typ ${4:Zahl} und ${5:Zahl}, gibt ${6:nichts} zurück, macht:",
			"\t$BLOCK_COMMENT_START Funktions Körper $BLOCK_COMMENT_END",
			"Und kann so benutzt werden:",
			"\t\"${7:Alias <x> <y>}\""
		],
		"description": "Funktions Deklaration mit mehreren Parametern"
	},
	"Function-Extern": {
		"scope": "ddp",
		"prefix": "Externe Funktion",
		"body": [
			"Die Funktion ${1:Name} mit den Parametern ${2:x} und ${3:y} vom Typ ${4:Zahl} und ${5:Zahl}, gibt ${6:nichts} zurück,",
			"ist in ${7:\"pfad\"} definiert",
			"und kann so benutzt werden:",
			"\t\"${8:Alias <x> <y>}\""
		],
		"description": "Funktions Deklaration mit mehreren Parametern"
	},
	"var-die": {
		"scope": "ddp",
		"prefix": "Variable",
		"body": [
			"${1|Der,Die|} ${2:Typ} ${3:Name} ist ${4:Wert}."
		],
		"description": "Variablen deklaration"
	},
	"var-bool": {
		"scope": "ddp",
		"prefix": "Variable Boolean",
		"body": [
			"Der Boolean ${1:Name} ist ${2|wahr,falsch|} wenn ${3:Ausdruck} ist."
		],
		"description": "Variablen deklaration eines Booleans"
	},
	"mutate": {
		"scope": "ddp",
		"prefix": "Speichere",
		"body": [
			"Speichere ${1:Ausdruck} in ${2:Variable}."
		],
		"description": ""
	}
}